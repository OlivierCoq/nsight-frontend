{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/libphonenumber-js/es6/helpers/formatNationalNumberUsingFormat.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle.js'; // This was originally set to $1 but there are some countries for which the\n// first group is not used in the national pattern (e.g. Argentina) so the $1\n// group does not match correctly. Therefore, we use `\\d`, so that the first\n// group actually used in the pattern will be matched.\n\nexport var FIRST_GROUP_PATTERN = /(\\$\\d)/;\nexport default function formatNationalNumberUsingFormat(number, format, _ref) {\n  var useInternationalFormat = _ref.useInternationalFormat,\n      withNationalPrefix = _ref.withNationalPrefix,\n      carrierCode = _ref.carrierCode,\n      metadata = _ref.metadata;\n  var formattedNumber = number.replace(new RegExp(format.pattern()), useInternationalFormat ? format.internationalFormat() : // This library doesn't use `domestic_carrier_code_formatting_rule`,\n  // because that one is only used when formatting phone numbers\n  // for dialing from a mobile phone, and this is not a dialing library.\n  // carrierCode && format.domesticCarrierCodeFormattingRule()\n  // \t// First, replace the $CC in the formatting rule with the desired carrier code.\n  // \t// Then, replace the $FG in the formatting rule with the first group\n  // \t// and the carrier code combined in the appropriate way.\n  // \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\n  // \t: (\n  // \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\n  // \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\n  // \t\t\t: format.format()\n  // \t)\n  withNationalPrefix && format.nationalPrefixFormattingRule() ? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule()) : format.format());\n\n  if (useInternationalFormat) {\n    return applyInternationalSeparatorStyle(formattedNumber);\n  }\n\n  return formattedNumber;\n}\n//# sourceMappingURL=formatNationalNumberUsingFormat.js.map",
      "start": 1709003848932,
      "end": 1709003848988,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709003848988,
      "end": 1709003848988,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709003848988,
      "end": 1709003848988,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709003848988,
      "end": 1709003848988,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709003848988,
      "end": 1709003848988,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709003848988,
      "end": 1709003848988,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709003848989,
      "end": 1709003848989,
      "order": "normal"
    }
  ]
}
