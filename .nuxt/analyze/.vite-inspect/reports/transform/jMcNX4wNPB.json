{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/square/dist/esm/api/transactionsApi.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { captureTransactionResponseSchema, } from '../models/captureTransactionResponse';\nimport { listTransactionsResponseSchema, } from '../models/listTransactionsResponse';\nimport { retrieveTransactionResponseSchema, } from '../models/retrieveTransactionResponse';\nimport { voidTransactionResponseSchema, } from '../models/voidTransactionResponse';\nimport { optional, string } from '../schema';\nimport { BaseApi } from './baseApi';\nexport class TransactionsApi extends BaseApi {\n    /**\n     * Lists transactions for a particular location.\n     *\n     * Transactions include payment information from sales and exchanges and refund\n     * information from returns and exchanges.\n     *\n     * Max results per [page](https://developer.squareup.com/docs/working-with-apis/pagination): 50\n     *\n     * @param locationId  The ID of the location to list transactions for.\n     * @param beginTime   The beginning of the requested reporting period, in RFC 3339 format.  See [Date\n     *                              ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for\n     *                              details on date inclusivity/exclusivity.  Default value: The current time minus one\n     *                              year.\n     * @param endTime     The end of the requested reporting period, in RFC 3339 format.  See [Date\n     *                              ranges](https://developer.squareup.com/docs/build-basics/working-with-dates) for\n     *                              details on date inclusivity/exclusivity.  Default value: The current time.\n     * @param sortOrder   The order in which results are listed in the response (`ASC` for oldest first,\n     *                              `DESC` for newest first).  Default value: `DESC`\n     * @param cursor      A pagination cursor returned by a previous call to this endpoint. Provide this to\n     *                              retrieve the next set of results for your original query.  See [Paginating\n     *                              results](https://developer.squareup.com/docs/working-with-apis/pagination) for more\n     *                              information.\n     * @return Response from the API call\n     * @deprecated\n     */\n    async listTransactions(locationId, beginTime, endTime, sortOrder, cursor, requestOptions) {\n        const req = this.createRequest('GET');\n        const mapped = req.prepareArgs({\n            locationId: [locationId, string()],\n            beginTime: [beginTime, optional(string())],\n            endTime: [endTime, optional(string())],\n            sortOrder: [sortOrder, optional(string())],\n            cursor: [cursor, optional(string())],\n        });\n        req.query('begin_time', mapped.beginTime);\n        req.query('end_time', mapped.endTime);\n        req.query('sort_order', mapped.sortOrder);\n        req.query('cursor', mapped.cursor);\n        req.appendTemplatePath `/v2/locations/${mapped.locationId}/transactions`;\n        req.deprecated('TransactionsApi.listTransactions');\n        return req.callAsJson(listTransactionsResponseSchema, requestOptions);\n    }\n    /**\n     * Retrieves details for a single transaction.\n     *\n     * @param locationId     The ID of the transaction's associated location.\n     * @param transactionId  The ID of the transaction to retrieve.\n     * @return Response from the API call\n     * @deprecated\n     */\n    async retrieveTransaction(locationId, transactionId, requestOptions) {\n        const req = this.createRequest('GET');\n        const mapped = req.prepareArgs({\n            locationId: [locationId, string()],\n            transactionId: [transactionId, string()],\n        });\n        req.appendTemplatePath `/v2/locations/${mapped.locationId}/transactions/${mapped.transactionId}`;\n        req.deprecated('TransactionsApi.retrieveTransaction');\n        return req.callAsJson(retrieveTransactionResponseSchema, requestOptions);\n    }\n    /**\n     * Captures a transaction that was created with the [Charge](api-endpoint:Transactions-Charge)\n     * endpoint with a `delay_capture` value of `true`.\n     *\n     *\n     * See [Delayed capture transactions](https://developer.squareup.\n     * com/docs/payments/transactions/overview#delayed-capture)\n     * for more information.\n     *\n     * @param locationId\n     * @param transactionId\n     * @return Response from the API call\n     * @deprecated\n     */\n    async captureTransaction(locationId, transactionId, requestOptions) {\n        const req = this.createRequest('POST');\n        const mapped = req.prepareArgs({\n            locationId: [locationId, string()],\n            transactionId: [transactionId, string()],\n        });\n        req.appendTemplatePath `/v2/locations/${mapped.locationId}/transactions/${mapped.transactionId}/capture`;\n        req.deprecated('TransactionsApi.captureTransaction');\n        return req.callAsJson(captureTransactionResponseSchema, requestOptions);\n    }\n    /**\n     * Cancels a transaction that was created with the [Charge](api-endpoint:Transactions-Charge)\n     * endpoint with a `delay_capture` value of `true`.\n     *\n     *\n     * See [Delayed capture transactions](https://developer.squareup.\n     * com/docs/payments/transactions/overview#delayed-capture)\n     * for more information.\n     *\n     * @param locationId\n     * @param transactionId\n     * @return Response from the API call\n     * @deprecated\n     */\n    async voidTransaction(locationId, transactionId, requestOptions) {\n        const req = this.createRequest('POST');\n        const mapped = req.prepareArgs({\n            locationId: [locationId, string()],\n            transactionId: [transactionId, string()],\n        });\n        req.appendTemplatePath `/v2/locations/${mapped.locationId}/transactions/${mapped.transactionId}/void`;\n        req.deprecated('TransactionsApi.voidTransaction');\n        return req.callAsJson(voidTransactionResponseSchema, requestOptions);\n    }\n}\n//# sourceMappingURL=transactionsApi.js.map",
      "start": 1707436156590,
      "end": 1707436156773,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707436156773,
      "end": 1707436156773,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707436156773,
      "end": 1707436156774,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707436156774,
      "end": 1707436156774,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707436156774,
      "end": 1707436156774,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707436156774,
      "end": 1707436156774,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707436156774,
      "end": 1707436156774,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707436156774,
      "end": 1707436156774,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707436156774,
      "end": 1707436156774,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707436156774,
      "end": 1707436156774,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707436156774,
      "end": 1707436156774,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707436156774,
      "end": 1707436156774,
      "order": "normal"
    }
  ]
}
