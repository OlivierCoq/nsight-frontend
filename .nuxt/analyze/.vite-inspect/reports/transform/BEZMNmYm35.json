{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/vuetify/lib/components/VDatePicker/VDatePickerYears.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VDatePickerYears.css\";\n\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\"; // Composables\nimport { useDate } from \"../../composables/date/index.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, nextTick, onMounted, ref, watchEffect } from 'vue';\nimport { convertToUnit, createRange, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\n// Types\nexport const makeVDatePickerYearsProps = propsFactory({\n  color: String,\n  height: [String, Number],\n  min: null,\n  max: null,\n  modelValue: Number\n}, 'VDatePickerYears');\nexport const VDatePickerYears = genericComponent()({\n  name: 'VDatePickerYears',\n  props: makeVDatePickerYearsProps(),\n  emits: {\n    'update:modelValue': year => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const adapter = useDate();\n    const model = useProxiedModel(props, 'modelValue');\n    const years = computed(() => {\n      const year = adapter.getYear(adapter.date());\n      let min = year - 100;\n      let max = year + 52;\n      if (props.min) {\n        min = adapter.getYear(adapter.date(props.min));\n      }\n      if (props.max) {\n        max = adapter.getYear(adapter.date(props.max));\n      }\n      let date = adapter.startOfYear(adapter.date());\n      date = adapter.setYear(date, min);\n      return createRange(max - min + 1, min).map(i => {\n        const text = adapter.format(date, 'year');\n        date = adapter.setYear(date, adapter.getYear(date) + 1);\n        return {\n          text,\n          value: i\n        };\n      });\n    });\n    watchEffect(() => {\n      model.value = model.value ?? adapter.getYear(adapter.date());\n    });\n    const yearRef = ref();\n    onMounted(async () => {\n      await nextTick();\n      yearRef.value?.$el.scrollIntoView({\n        block: 'center'\n      });\n    });\n    useRender(() => _createVNode(\"div\", {\n      \"class\": \"v-date-picker-years\",\n      \"style\": {\n        height: convertToUnit(props.height)\n      }\n    }, [_createVNode(\"div\", {\n      \"class\": \"v-date-picker-years__content\"\n    }, [years.value.map((year, i) => {\n      const btnProps = {\n        ref: model.value === year.value ? yearRef : undefined,\n        active: model.value === year.value,\n        color: model.value === year.value ? props.color : undefined,\n        rounded: true,\n        text: year.text,\n        variant: model.value === year.value ? 'flat' : 'text',\n        onClick: () => model.value = year.value\n      };\n      return slots.year?.({\n        year,\n        i,\n        props: btnProps\n      }) ?? _createVNode(VBtn, _mergeProps({\n        \"key\": \"month\"\n      }, btnProps), null);\n    })])]));\n    return {};\n  }\n});\n//# sourceMappingURL=VDatePickerYears.mjs.map",
      "start": 1707436156008,
      "end": 1707436156095,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707436156095,
      "end": 1707436156095,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707436156095,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707436156096,
      "end": 1707436156096,
      "order": "normal"
    }
  ]
}
