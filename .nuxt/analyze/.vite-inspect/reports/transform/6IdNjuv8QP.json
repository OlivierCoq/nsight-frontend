{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/square/dist/esm/api/merchantsApi.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { listMerchantsResponseSchema, } from '../models/listMerchantsResponse';\nimport { retrieveMerchantResponseSchema, } from '../models/retrieveMerchantResponse';\nimport { number, optional, string } from '../schema';\nimport { BaseApi } from './baseApi';\nexport class MerchantsApi extends BaseApi {\n    /**\n     * Provides details about the merchant associated with a given access token.\n     *\n     * The access token used to connect your application to a Square seller is associated\n     * with a single merchant. That means that `ListMerchants` returns a list\n     * with a single `Merchant` object. You can specify your personal access token\n     * to get your own merchant information or specify an OAuth token to get the\n     * information for the merchant that granted your application access.\n     *\n     * If you know the merchant ID, you can also use the [RetrieveMerchant]($e/Merchants/RetrieveMerchant)\n     * endpoint to retrieve the merchant information.\n     *\n     * @param cursor The cursor generated by the previous response.\n     * @return Response from the API call\n     */\n    async listMerchants(cursor, requestOptions) {\n        const req = this.createRequest('GET', '/v2/merchants');\n        const mapped = req.prepareArgs({ cursor: [cursor, optional(number())] });\n        req.query('cursor', mapped.cursor);\n        return req.callAsJson(listMerchantsResponseSchema, requestOptions);\n    }\n    /**\n     * Retrieves the `Merchant` object for the given `merchant_id`.\n     *\n     * @param merchantId  The ID of the merchant to retrieve. If the string \"me\" is supplied as the ID, then\n     *                              retrieve the merchant that is currently accessible to this call.\n     * @return Response from the API call\n     */\n    async retrieveMerchant(merchantId, requestOptions) {\n        const req = this.createRequest('GET');\n        const mapped = req.prepareArgs({ merchantId: [merchantId, string()] });\n        req.appendTemplatePath `/v2/merchants/${mapped.merchantId}`;\n        return req.callAsJson(retrieveMerchantResponseSchema, requestOptions);\n    }\n}\n//# sourceMappingURL=merchantsApi.js.map",
      "start": 1707437860318,
      "end": 1707437860475,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707437860475,
      "end": 1707437860475,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707437860475,
      "end": 1707437860475,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707437860475,
      "end": 1707437860475,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707437860475,
      "end": 1707437860475,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707437860475,
      "end": 1707437860475,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707437860475,
      "end": 1707437860475,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707437860475,
      "end": 1707437860475,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707437860475,
      "end": 1707437860475,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707437860475,
      "end": 1707437860475,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707437860475,
      "end": 1707437860475,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707437860475,
      "end": 1707437860475,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707437860475,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707437860476,
      "end": 1707437860476,
      "order": "normal"
    }
  ]
}
