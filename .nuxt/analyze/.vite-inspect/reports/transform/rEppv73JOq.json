{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/@apimatic/core/es/errors/argumentsValidationError.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { __extends, __values } from 'tslib';\n\n/**\r\n * Thrown when one or more arguments passed to a method fail validation.\r\n */\nvar ArgumentsValidationError =\n/*#__PURE__*/\n/** @class */\nfunction (_super) {\n  __extends(ArgumentsValidationError, _super);\n  function ArgumentsValidationError(errors) {\n    var e_1, _a;\n    var _newTarget = this.constructor;\n    var _this = this;\n    var errorKeys = Object.keys(errors);\n    var message;\n    if (errorKeys.length === 0) {\n      message = 'One or more arguments failed validation.';\n    } else if (errorKeys.length === 1 && errors[errorKeys[0]].length === 1) {\n      message = \"Argument for '\" + errorKeys[0] + \"' failed validation.\\n\\n\" + errors[errorKeys[0]][0].message;\n    } else {\n      message = \"The following arguments failed validation: \" + errorKeys.join(', ') + \".\\n\\n\";\n      var msgList = [];\n      try {\n        for (var errorKeys_1 = __values(errorKeys), errorKeys_1_1 = errorKeys_1.next(); !errorKeys_1_1.done; errorKeys_1_1 = errorKeys_1.next()) {\n          var param = errorKeys_1_1.value;\n          msgList.push(\"> For argument '\" + param + \"':\");\n          if (errors[param].length === 1) {\n            msgList.push(errors[param][0].message);\n          } else {\n            for (var index = 0; index < errors[param].length; index++) {\n              var error = errors[param][index];\n              msgList.push(\">> Issue #\" + (index + 1) + \"\\n\\n\" + error.message);\n            }\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (errorKeys_1_1 && !errorKeys_1_1.done && (_a = errorKeys_1.return)) _a.call(errorKeys_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      message += msgList.join('\\n\\n');\n    }\n    _this = _super.call(this, message) || this;\n    Object.setPrototypeOf(_this, _newTarget.prototype);\n    _this.errors = errors;\n    return _this;\n  }\n  return ArgumentsValidationError;\n}(Error);\nexport { ArgumentsValidationError };",
      "start": 1707436158576,
      "end": 1707436158616,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707436158616,
      "end": 1707436158616,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707436158616,
      "end": 1707436158617,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707436158617,
      "end": 1707436158617,
      "order": "normal"
    }
  ]
}
