{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/square/dist/esm/api/payoutsApi.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { getPayoutResponseSchema, } from '../models/getPayoutResponse';\nimport { listPayoutEntriesResponseSchema, } from '../models/listPayoutEntriesResponse';\nimport { listPayoutsResponseSchema, } from '../models/listPayoutsResponse';\nimport { number, optional, string } from '../schema';\nimport { BaseApi } from './baseApi';\nexport class PayoutsApi extends BaseApi {\n    /**\n     * Retrieves a list of all payouts for the default location.\n     * You can filter payouts by location ID, status, time range, and order them in ascending or descending\n     * order.\n     * To call this endpoint, set `PAYOUTS_READ` for the OAuth scope.\n     *\n     * @param locationId  The ID of the location for which to list the payouts. By default, payouts are\n     *                              returned for the default (main) location associated with the seller.\n     * @param status      If provided, only payouts with the given status are returned.\n     * @param beginTime   The timestamp for the beginning of the payout creation time, in RFC 3339 format.\n     *                              Inclusive. Default: The current time minus one year.\n     * @param endTime     The timestamp for the end of the payout creation time, in RFC 3339 format. Default:\n     *                              The current time.\n     * @param sortOrder   The order in which payouts are listed.\n     * @param cursor      A pagination cursor returned by a previous call to this endpoint. Provide this\n     *                              cursor to retrieve the next set of results for the original query. For more\n     *                              information, see [Pagination](https://developer.squareup.com/docs/build-basics/common-\n     *                              api-patterns/pagination). If request parameters change between requests, subsequent\n     *                              results may contain duplicates or missing records.\n     * @param limit       The maximum number of results to be returned in a single page. It is possible to\n     *                              receive fewer results than the specified limit on a given page. The default value of\n     *                              100 is also the maximum allowed value. If the provided value is greater than 100, it\n     *                              is ignored and the default value is used instead. Default: `100`\n     * @return Response from the API call\n     */\n    async listPayouts(locationId, status, beginTime, endTime, sortOrder, cursor, limit, requestOptions) {\n        const req = this.createRequest('GET', '/v2/payouts');\n        const mapped = req.prepareArgs({\n            locationId: [locationId, optional(string())],\n            status: [status, optional(string())],\n            beginTime: [beginTime, optional(string())],\n            endTime: [endTime, optional(string())],\n            sortOrder: [sortOrder, optional(string())],\n            cursor: [cursor, optional(string())],\n            limit: [limit, optional(number())],\n        });\n        req.query('location_id', mapped.locationId);\n        req.query('status', mapped.status);\n        req.query('begin_time', mapped.beginTime);\n        req.query('end_time', mapped.endTime);\n        req.query('sort_order', mapped.sortOrder);\n        req.query('cursor', mapped.cursor);\n        req.query('limit', mapped.limit);\n        return req.callAsJson(listPayoutsResponseSchema, requestOptions);\n    }\n    /**\n     * Retrieves details of a specific payout identified by a payout ID.\n     * To call this endpoint, set `PAYOUTS_READ` for the OAuth scope.\n     *\n     * @param payoutId  The ID of the payout to retrieve the information for.\n     * @return Response from the API call\n     */\n    async getPayout(payoutId, requestOptions) {\n        const req = this.createRequest('GET');\n        const mapped = req.prepareArgs({ payoutId: [payoutId, string()] });\n        req.appendTemplatePath `/v2/payouts/${mapped.payoutId}`;\n        return req.callAsJson(getPayoutResponseSchema, requestOptions);\n    }\n    /**\n     * Retrieves a list of all payout entries for a specific payout.\n     * To call this endpoint, set `PAYOUTS_READ` for the OAuth scope.\n     *\n     * @param payoutId   The ID of the payout to retrieve the information for.\n     * @param sortOrder  The order in which payout entries are listed.\n     * @param cursor     A pagination cursor returned by a previous call to this endpoint. Provide this cursor\n     *                             to retrieve the next set of results for the original query. For more information, see\n     *                             [Pagination](https://developer.squareup.com/docs/build-basics/common-api-\n     *                             patterns/pagination). If request parameters change between requests, subsequent\n     *                             results may contain duplicates or missing records.\n     * @param limit      The maximum number of results to be returned in a single page. It is possible to\n     *                             receive fewer results than the specified limit on a given page. The default value of\n     *                             100 is also the maximum allowed value. If the provided value is greater than 100, it\n     *                             is ignored and the default value is used instead. Default: `100`\n     * @return Response from the API call\n     */\n    async listPayoutEntries(payoutId, sortOrder, cursor, limit, requestOptions) {\n        const req = this.createRequest('GET');\n        const mapped = req.prepareArgs({\n            payoutId: [payoutId, string()],\n            sortOrder: [sortOrder, optional(string())],\n            cursor: [cursor, optional(string())],\n            limit: [limit, optional(number())],\n        });\n        req.query('sort_order', mapped.sortOrder);\n        req.query('cursor', mapped.cursor);\n        req.query('limit', mapped.limit);\n        req.appendTemplatePath `/v2/payouts/${mapped.payoutId}/payout-entries`;\n        return req.callAsJson(listPayoutEntriesResponseSchema, requestOptions);\n    }\n}\n//# sourceMappingURL=payoutsApi.js.map",
      "start": 1707437860373,
      "end": 1707437860506,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707437860506,
      "end": 1707437860506,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707437860506,
      "end": 1707437860506,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707437860506,
      "end": 1707437860506,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707437860506,
      "end": 1707437860506,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707437860506,
      "end": 1707437860506,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707437860506,
      "end": 1707437860506,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707437860506,
      "end": 1707437860506,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707437860507,
      "end": 1707437860507,
      "order": "normal"
    }
  ]
}
