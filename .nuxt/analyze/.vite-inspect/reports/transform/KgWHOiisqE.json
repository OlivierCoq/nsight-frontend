{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/libphonenumber-js/es6/findNumbers/matchPhoneNumberStringAgainstPhoneNumber.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import parsePhoneNumber from '../parsePhoneNumber.js';\n/**\r\n * Matches a phone number object against a phone number string.\r\n * @param  {string} phoneNumberString\r\n * @param  {PhoneNumber} phoneNumber\r\n * @param  {object} metadata â€” Metadata JSON\r\n * @return {'INVALID_NUMBER'|'NO_MATCH'|'SHORT_NSN_MATCH'|'NSN_MATCH'|'EXACT_MATCH'}\r\n */\n\nexport default function matchPhoneNumberStringAgainstPhoneNumber(phoneNumberString, phoneNumber, metadata) {\n  // Parse `phoneNumberString`.\n  var phoneNumberStringContainsCallingCode = true;\n  var parsedPhoneNumber = parsePhoneNumber(phoneNumberString, metadata);\n\n  if (!parsedPhoneNumber) {\n    // If `phoneNumberString` didn't contain a country calling code\n    // then substitute it with the `phoneNumber`'s country calling code.\n    phoneNumberStringContainsCallingCode = false;\n    parsedPhoneNumber = parsePhoneNumber(phoneNumberString, {\n      defaultCallingCode: phoneNumber.countryCallingCode\n    }, metadata);\n  }\n\n  if (!parsedPhoneNumber) {\n    return 'INVALID_NUMBER';\n  } // Check that the extensions match.\n\n\n  if (phoneNumber.ext) {\n    if (parsedPhoneNumber.ext !== phoneNumber.ext) {\n      return 'NO_MATCH';\n    }\n  } else {\n    if (parsedPhoneNumber.ext) {\n      return 'NO_MATCH';\n    }\n  } // Check that country calling codes match.\n\n\n  if (phoneNumberStringContainsCallingCode) {\n    if (phoneNumber.countryCallingCode !== parsedPhoneNumber.countryCallingCode) {\n      return 'NO_MATCH';\n    }\n  } // Check if the whole numbers match.\n\n\n  if (phoneNumber.number === parsedPhoneNumber.number) {\n    if (phoneNumberStringContainsCallingCode) {\n      return 'EXACT_MATCH';\n    } else {\n      return 'NSN_MATCH';\n    }\n  } // Check if one national number is a \"suffix\" of the other.\n\n\n  if (phoneNumber.nationalNumber.indexOf(parsedPhoneNumber.nationalNumber) === 0 || parsedPhoneNumber.nationalNumber.indexOf(phoneNumber.nationalNumber) === 0) {\n    // \"A SHORT_NSN_MATCH occurs if there is a difference because of the\n    //  presence or absence of an 'Italian leading zero', the presence or\n    //  absence of an extension, or one NSN being a shorter variant of the\n    //  other.\"\n    return 'SHORT_NSN_MATCH';\n  }\n\n  return 'NO_MATCH';\n}\n//# sourceMappingURL=matchPhoneNumberStringAgainstPhoneNumber.js.map",
      "start": 1709003849149,
      "end": 1709003849182,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709003849182,
      "end": 1709003849182,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709003849182,
      "end": 1709003849183,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709003849183,
      "end": 1709003849183,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709003849183,
      "end": 1709003849183,
      "order": "normal"
    }
  ]
}
