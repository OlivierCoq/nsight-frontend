{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/libphonenumber-js/es6/findNumbers/LRUCache.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n// https://medium.com/dsinjs/implementing-lru-cache-in-javascript-94ba6755cda9\nvar Node = /*#__PURE__*/_createClass(function Node(key, value) {\n  var next = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var prev = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  _classCallCheck(this, Node);\n\n  this.key = key;\n  this.value = value;\n  this.next = next;\n  this.prev = prev;\n});\n\nvar LRUCache = /*#__PURE__*/function () {\n  //set default limit of 10 if limit is not passed.\n  function LRUCache() {\n    var limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n\n    _classCallCheck(this, LRUCache);\n\n    this.size = 0;\n    this.limit = limit;\n    this.head = null;\n    this.tail = null;\n    this.cache = {};\n  } // Write Node to head of LinkedList\n  // update cache with Node key and Node reference\n\n\n  _createClass(LRUCache, [{\n    key: \"put\",\n    value: function put(key, value) {\n      this.ensureLimit();\n\n      if (!this.head) {\n        this.head = this.tail = new Node(key, value);\n      } else {\n        var node = new Node(key, value, this.head);\n        this.head.prev = node;\n        this.head = node;\n      } //Update the cache map\n\n\n      this.cache[key] = this.head;\n      this.size++;\n    } // Read from cache map and make that node as new Head of LinkedList\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      if (this.cache[key]) {\n        var value = this.cache[key].value; // node removed from it's position and cache\n\n        this.remove(key); // write node again to the head of LinkedList to make it most recently used\n\n        this.put(key, value);\n        return value;\n      }\n\n      console.log(\"Item not available in cache for key \".concat(key));\n    }\n  }, {\n    key: \"ensureLimit\",\n    value: function ensureLimit() {\n      if (this.size === this.limit) {\n        this.remove(this.tail.key);\n      }\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      var node = this.cache[key];\n\n      if (node.prev !== null) {\n        node.prev.next = node.next;\n      } else {\n        this.head = node.next;\n      }\n\n      if (node.next !== null) {\n        node.next.prev = node.prev;\n      } else {\n        this.tail = node.prev;\n      }\n\n      delete this.cache[key];\n      this.size--;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = null;\n      this.tail = null;\n      this.size = 0;\n      this.cache = {};\n    } // // Invokes the callback function with every node of the chain and the index of the node.\n    // forEach(fn) {\n    //   let node = this.head;\n    //   let counter = 0;\n    //   while (node) {\n    //     fn(node, counter);\n    //     node = node.next;\n    //     counter++;\n    //   }\n    // }\n    // // To iterate over LRU with a 'for...of' loop\n    // *[Symbol.iterator]() {\n    //   let node = this.head;\n    //   while (node) {\n    //     yield node;\n    //     node = node.next;\n    //   }\n    // }\n\n  }]);\n\n  return LRUCache;\n}();\n\nexport { LRUCache as default };\n//# sourceMappingURL=LRUCache.js.map",
      "start": 1709003849140,
      "end": 1709003849180,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709003849180,
      "end": 1709003849180,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709003849180,
      "end": 1709003849181,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709003849181,
      "end": 1709003849181,
      "order": "normal"
    }
  ]
}
