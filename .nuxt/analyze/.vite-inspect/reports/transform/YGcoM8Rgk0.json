{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/square/dist/esm/api/customerGroupsApi.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createCustomerGroupRequestSchema, } from '../models/createCustomerGroupRequest';\nimport { createCustomerGroupResponseSchema, } from '../models/createCustomerGroupResponse';\nimport { deleteCustomerGroupResponseSchema, } from '../models/deleteCustomerGroupResponse';\nimport { listCustomerGroupsResponseSchema, } from '../models/listCustomerGroupsResponse';\nimport { retrieveCustomerGroupResponseSchema, } from '../models/retrieveCustomerGroupResponse';\nimport { updateCustomerGroupRequestSchema, } from '../models/updateCustomerGroupRequest';\nimport { updateCustomerGroupResponseSchema, } from '../models/updateCustomerGroupResponse';\nimport { number, optional, string } from '../schema';\nimport { BaseApi } from './baseApi';\nexport class CustomerGroupsApi extends BaseApi {\n    /**\n     * Retrieves the list of customer groups of a business.\n     *\n     * @param cursor A pagination cursor returned by a previous call to this endpoint. Provide this cursor to\n     *                         retrieve the next set of results for your original query.  For more information, see\n     *                         [Pagination](https://developer.squareup.com/docs/build-basics/common-api-\n     *                         patterns/pagination).\n     * @param limit  The maximum number of results to return in a single page. This limit is advisory. The\n     *                         response might contain more or fewer results. If the limit is less than 1 or greater than\n     *                         50, Square returns a `400 VALUE_TOO_LOW` or `400 VALUE_TOO_HIGH` error. The default value\n     *                         is 50.  For more information, see [Pagination](https://developer.squareup.com/docs/build-\n     *                         basics/common-api-patterns/pagination).\n     * @return Response from the API call\n     */\n    async listCustomerGroups(cursor, limit, requestOptions) {\n        const req = this.createRequest('GET', '/v2/customers/groups');\n        const mapped = req.prepareArgs({\n            cursor: [cursor, optional(string())],\n            limit: [limit, optional(number())],\n        });\n        req.query('cursor', mapped.cursor);\n        req.query('limit', mapped.limit);\n        return req.callAsJson(listCustomerGroupsResponseSchema, requestOptions);\n    }\n    /**\n     * Creates a new customer group for a business.\n     *\n     * The request must include the `name` value of the group.\n     *\n     * @param body         An object containing the fields to POST for the request.\n     *                                                          See the corresponding object definition for field\n     *                                                          details.\n     * @return Response from the API call\n     */\n    async createCustomerGroup(body, requestOptions) {\n        const req = this.createRequest('POST', '/v2/customers/groups');\n        const mapped = req.prepareArgs({\n            body: [body, createCustomerGroupRequestSchema],\n        });\n        req.header('Content-Type', 'application/json');\n        req.json(mapped.body);\n        return req.callAsJson(createCustomerGroupResponseSchema, requestOptions);\n    }\n    /**\n     * Deletes a customer group as identified by the `group_id` value.\n     *\n     * @param groupId  The ID of the customer group to delete.\n     * @return Response from the API call\n     */\n    async deleteCustomerGroup(groupId, requestOptions) {\n        const req = this.createRequest('DELETE');\n        const mapped = req.prepareArgs({ groupId: [groupId, string()] });\n        req.appendTemplatePath `/v2/customers/groups/${mapped.groupId}`;\n        return req.callAsJson(deleteCustomerGroupResponseSchema, requestOptions);\n    }\n    /**\n     * Retrieves a specific customer group as identified by the `group_id` value.\n     *\n     * @param groupId  The ID of the customer group to retrieve.\n     * @return Response from the API call\n     */\n    async retrieveCustomerGroup(groupId, requestOptions) {\n        const req = this.createRequest('GET');\n        const mapped = req.prepareArgs({ groupId: [groupId, string()] });\n        req.appendTemplatePath `/v2/customers/groups/${mapped.groupId}`;\n        return req.callAsJson(retrieveCustomerGroupResponseSchema, requestOptions);\n    }\n    /**\n     * Updates a customer group as identified by the `group_id` value.\n     *\n     * @param groupId      The ID of the customer group to update.\n     * @param body         An object containing the fields to POST for the request.\n     *                                                          See the corresponding object definition for field\n     *                                                          details.\n     * @return Response from the API call\n     */\n    async updateCustomerGroup(groupId, body, requestOptions) {\n        const req = this.createRequest('PUT');\n        const mapped = req.prepareArgs({\n            groupId: [groupId, string()],\n            body: [body, updateCustomerGroupRequestSchema],\n        });\n        req.header('Content-Type', 'application/json');\n        req.json(mapped.body);\n        req.appendTemplatePath `/v2/customers/groups/${mapped.groupId}`;\n        return req.callAsJson(updateCustomerGroupResponseSchema, requestOptions);\n    }\n}\n//# sourceMappingURL=customerGroupsApi.js.map",
      "start": 1709003846717,
      "end": 1709003846797,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709003846797,
      "end": 1709003846797,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709003846797,
      "end": 1709003846797,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709003846797,
      "end": 1709003846797,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709003846797,
      "end": 1709003846797,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709003846797,
      "end": 1709003846797,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709003846797,
      "end": 1709003846797,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709003846797,
      "end": 1709003846797,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709003846797,
      "end": 1709003846797,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709003846797,
      "end": 1709003846797,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709003846797,
      "end": 1709003846797,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709003846797,
      "end": 1709003846797,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709003846797,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709003846798,
      "end": 1709003846798,
      "order": "normal"
    }
  ]
}
