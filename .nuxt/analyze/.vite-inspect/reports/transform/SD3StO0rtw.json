{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/vuetify/lib/components/VDataTable/composables/paginate.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Composables\nimport { useProxiedModel } from \"../../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, inject, provide, watch, watchEffect } from 'vue';\nimport { clamp, getCurrentInstance, propsFactory } from \"../../../util/index.mjs\"; // Types\nexport const makeDataTablePaginateProps = propsFactory({\n  page: {\n    type: [Number, String],\n    default: 1\n  },\n  itemsPerPage: {\n    type: [Number, String],\n    default: 10\n  }\n}, 'DataTable-paginate');\nconst VDataTablePaginationSymbol = Symbol.for('vuetify:data-table-pagination');\nexport function createPagination(props) {\n  const page = useProxiedModel(props, 'page', undefined, value => +(value ?? 1));\n  const itemsPerPage = useProxiedModel(props, 'itemsPerPage', undefined, value => +(value ?? 10));\n  return {\n    page,\n    itemsPerPage\n  };\n}\nexport function providePagination(options) {\n  const {\n    page,\n    itemsPerPage,\n    itemsLength\n  } = options;\n  const startIndex = computed(() => {\n    if (itemsPerPage.value === -1) return 0;\n    return itemsPerPage.value * (page.value - 1);\n  });\n  const stopIndex = computed(() => {\n    if (itemsPerPage.value === -1) return itemsLength.value;\n    return Math.min(itemsLength.value, startIndex.value + itemsPerPage.value);\n  });\n  const pageCount = computed(() => {\n    if (itemsPerPage.value === -1 || itemsLength.value === 0) return 1;\n    return Math.ceil(itemsLength.value / itemsPerPage.value);\n  });\n  watchEffect(() => {\n    if (page.value > pageCount.value) {\n      page.value = pageCount.value;\n    }\n  });\n  function setItemsPerPage(value) {\n    itemsPerPage.value = value;\n    page.value = 1;\n  }\n  function nextPage() {\n    page.value = clamp(page.value + 1, 1, pageCount.value);\n  }\n  function prevPage() {\n    page.value = clamp(page.value - 1, 1, pageCount.value);\n  }\n  function setPage(value) {\n    page.value = clamp(value, 1, pageCount.value);\n  }\n  const data = {\n    page,\n    itemsPerPage,\n    startIndex,\n    stopIndex,\n    pageCount,\n    itemsLength,\n    nextPage,\n    prevPage,\n    setPage,\n    setItemsPerPage\n  };\n  provide(VDataTablePaginationSymbol, data);\n  return data;\n}\nexport function usePagination() {\n  const data = inject(VDataTablePaginationSymbol);\n  if (!data) throw new Error('Missing pagination!');\n  return data;\n}\nexport function usePaginatedItems(options) {\n  const vm = getCurrentInstance('usePaginatedItems');\n  const {\n    items,\n    startIndex,\n    stopIndex,\n    itemsPerPage\n  } = options;\n  const paginatedItems = computed(() => {\n    if (itemsPerPage.value <= 0) return items.value;\n    return items.value.slice(startIndex.value, stopIndex.value);\n  });\n  watch(paginatedItems, val => {\n    vm.emit('update:currentItems', val);\n  });\n  return {\n    paginatedItems\n  };\n}\n//# sourceMappingURL=paginate.mjs.map",
      "start": 1705807632051,
      "end": 1705807632198,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1705807632198,
      "end": 1705807632198,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1705807632199,
      "end": 1705807632199,
      "order": "normal"
    }
  ]
}
