{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/square/dist/esm/client.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ApplePayApi } from './api/applePayApi';\nimport { BankAccountsApi } from './api/bankAccountsApi';\nimport { BookingCustomAttributesApi } from './api/bookingCustomAttributesApi';\nimport { BookingsApi } from './api/bookingsApi';\nimport { CardsApi } from './api/cardsApi';\nimport { CashDrawersApi } from './api/cashDrawersApi';\nimport { CatalogApi } from './api/catalogApi';\nimport { CheckoutApi } from './api/checkoutApi';\nimport { CustomerCustomAttributesApi } from './api/customerCustomAttributesApi';\nimport { CustomerGroupsApi } from './api/customerGroupsApi';\nimport { CustomersApi } from './api/customersApi';\nimport { CustomerSegmentsApi } from './api/customerSegmentsApi';\nimport { DevicesApi } from './api/devicesApi';\nimport { DisputesApi } from './api/disputesApi';\nimport { EmployeesApi } from './api/employeesApi';\nimport { GiftCardActivitiesApi } from './api/giftCardActivitiesApi';\nimport { GiftCardsApi } from './api/giftCardsApi';\nimport { InventoryApi } from './api/inventoryApi';\nimport { InvoicesApi } from './api/invoicesApi';\nimport { LaborApi } from './api/laborApi';\nimport { LocationCustomAttributesApi } from './api/locationCustomAttributesApi';\nimport { LocationsApi } from './api/locationsApi';\nimport { LoyaltyApi } from './api/loyaltyApi';\nimport { MerchantCustomAttributesApi } from './api/merchantCustomAttributesApi';\nimport { MerchantsApi } from './api/merchantsApi';\nimport { MobileAuthorizationApi } from './api/mobileAuthorizationApi';\nimport { OAuthApi } from './api/oAuthApi';\nimport { OrderCustomAttributesApi } from './api/orderCustomAttributesApi';\nimport { OrdersApi } from './api/ordersApi';\nimport { PaymentsApi } from './api/paymentsApi';\nimport { PayoutsApi } from './api/payoutsApi';\nimport { RefundsApi } from './api/refundsApi';\nimport { SitesApi } from './api/sitesApi';\nimport { SnippetsApi } from './api/snippetsApi';\nimport { SubscriptionsApi } from './api/subscriptionsApi';\nimport { TeamApi } from './api/teamApi';\nimport { TerminalApi } from './api/terminalApi';\nimport { TransactionsApi } from './api/transactionsApi';\nimport { V1TransactionsApi } from './api/v1TransactionsApi';\nimport { VendorsApi } from './api/vendorsApi';\nimport { WebhookSubscriptionsApi } from './api/webhookSubscriptionsApi';\nimport { accessTokenAuthenticationProvider } from './authentication';\nimport { Environment } from './configuration';\nimport { DEFAULT_CONFIGURATION, DEFAULT_RETRY_CONFIG, } from './defaultConfiguration';\nimport { ApiError } from './errors/apiError';\nimport { assertHeaders, mergeHeaders } from './core';\nimport { pathTemplate, SkipEncode } from './core';\nimport { setHeader } from './core';\nimport { updateUserAgent } from './core';\nimport { AbortError, createRequestBuilderFactory, } from './core';\nimport { HttpClient } from './clientAdapter';\n/** Current SDK version */\nexport const SDK_VERSION = '34.0.1';\nexport class Client {\n    constructor(config) {\n        var _a, _b, _c, _d;\n        this._config = Object.assign(Object.assign({}, DEFAULT_CONFIGURATION), config);\n        this._retryConfig = Object.assign(Object.assign({}, DEFAULT_RETRY_CONFIG), (_a = this._config.httpClientOptions) === null || _a === void 0 ? void 0 : _a.retryConfig);\n        this._timeout =\n            typeof ((_b = this._config.httpClientOptions) === null || _b === void 0 ? void 0 : _b.timeout) != 'undefined'\n                ? this._config.httpClientOptions.timeout\n                : this._config.timeout;\n        this._userAgent = updateUserAgent('Square-TypeScript-SDK/34.0.1 ({api-version}) {engine}/{engine-version} ({os-info}) {detail}', this._config.squareVersion, this._config.userAgentDetail);\n        this._requestBuilderFactory = createRequestHandlerFactory(server => getBaseUri(server, this._config), accessTokenAuthenticationProvider(this._config), new HttpClient(AbortError, {\n            timeout: this._timeout,\n            clientConfigOverrides: this._config.unstable_httpClientOptions,\n            httpAgent: (_c = this._config.httpClientOptions) === null || _c === void 0 ? void 0 : _c.httpAgent,\n            httpsAgent: (_d = this._config.httpClientOptions) === null || _d === void 0 ? void 0 : _d.httpsAgent,\n        }), [\n            withErrorHandlers,\n            withUserAgent(this._userAgent),\n            withAdditionalHeaders(this._config),\n            withAuthenticationByDefault,\n            withSquareVersion(this._config),\n        ], this._retryConfig);\n        this.applePayApi = new ApplePayApi(this);\n        this.bankAccountsApi = new BankAccountsApi(this);\n        this.bookingCustomAttributesApi = new BookingCustomAttributesApi(this);\n        this.bookingsApi = new BookingsApi(this);\n        this.cardsApi = new CardsApi(this);\n        this.cashDrawersApi = new CashDrawersApi(this);\n        this.catalogApi = new CatalogApi(this);\n        this.checkoutApi = new CheckoutApi(this);\n        this.customerCustomAttributesApi = new CustomerCustomAttributesApi(this);\n        this.customerGroupsApi = new CustomerGroupsApi(this);\n        this.customersApi = new CustomersApi(this);\n        this.customerSegmentsApi = new CustomerSegmentsApi(this);\n        this.devicesApi = new DevicesApi(this);\n        this.disputesApi = new DisputesApi(this);\n        this.employeesApi = new EmployeesApi(this);\n        this.giftCardActivitiesApi = new GiftCardActivitiesApi(this);\n        this.giftCardsApi = new GiftCardsApi(this);\n        this.inventoryApi = new InventoryApi(this);\n        this.invoicesApi = new InvoicesApi(this);\n        this.laborApi = new LaborApi(this);\n        this.locationCustomAttributesApi = new LocationCustomAttributesApi(this);\n        this.locationsApi = new LocationsApi(this);\n        this.loyaltyApi = new LoyaltyApi(this);\n        this.merchantCustomAttributesApi = new MerchantCustomAttributesApi(this);\n        this.merchantsApi = new MerchantsApi(this);\n        this.mobileAuthorizationApi = new MobileAuthorizationApi(this);\n        this.oAuthApi = new OAuthApi(this);\n        this.orderCustomAttributesApi = new OrderCustomAttributesApi(this);\n        this.ordersApi = new OrdersApi(this);\n        this.paymentsApi = new PaymentsApi(this);\n        this.payoutsApi = new PayoutsApi(this);\n        this.refundsApi = new RefundsApi(this);\n        this.sitesApi = new SitesApi(this);\n        this.snippetsApi = new SnippetsApi(this);\n        this.subscriptionsApi = new SubscriptionsApi(this);\n        this.teamApi = new TeamApi(this);\n        this.terminalApi = new TerminalApi(this);\n        this.transactionsApi = new TransactionsApi(this);\n        this.v1TransactionsApi = new V1TransactionsApi(this);\n        this.vendorsApi = new VendorsApi(this);\n        this.webhookSubscriptionsApi = new WebhookSubscriptionsApi(this);\n    }\n    getRequestBuilderFactory() {\n        return this._requestBuilderFactory;\n    }\n    /**\n     * Clone this client and override given configuration options\n     */\n    withConfiguration(config) {\n        return new Client(Object.assign(Object.assign({}, this._config), config));\n    }\n}\nfunction createHttpClientAdapter(client) {\n    return async (request, requestOptions) => {\n        return await client.executeRequest(request, requestOptions);\n    };\n}\nfunction getBaseUri(server = 'default', config) {\n    if (config.environment === Environment.Production) {\n        if (server === 'default') {\n            return 'https://connect.squareup.com';\n        }\n    }\n    if (config.environment === Environment.Sandbox) {\n        if (server === 'default') {\n            return 'https://connect.squareupsandbox.com';\n        }\n    }\n    if (config.environment === Environment.Custom) {\n        if (server === 'default') {\n            return pathTemplate `${new SkipEncode(config.customUrl)}`;\n        }\n    }\n    throw new Error('Could not get Base URL. Invalid environment or server.');\n}\nfunction createRequestHandlerFactory(baseUrlProvider, authProvider, httpClient, addons, retryConfig) {\n    const requestBuilderFactory = createRequestBuilderFactory(createHttpClientAdapter(httpClient), baseUrlProvider, ApiError, authProvider, retryConfig);\n    return tap(requestBuilderFactory, ...addons);\n}\nfunction tap(requestBuilderFactory, ...callback) {\n    return (...args) => {\n        const requestBuilder = requestBuilderFactory(...args);\n        callback.forEach(c => c(requestBuilder));\n        return requestBuilder;\n    };\n}\nfunction withErrorHandlers(rb) {\n    rb.defaultToError(ApiError);\n}\nfunction withAdditionalHeaders({ additionalHeaders, }) {\n    const clone = Object.assign({}, additionalHeaders);\n    assertHeaders(clone);\n    return (rb) => {\n        rb.interceptRequest(request => {\n            var _a;\n            const headers = (_a = request.headers) !== null && _a !== void 0 ? _a : {};\n            mergeHeaders(headers, clone);\n            return Object.assign(Object.assign({}, request), { headers });\n        });\n    };\n}\nfunction withUserAgent(userAgent) {\n    return (rb) => {\n        rb.interceptRequest(request => {\n            var _a;\n            const headers = (_a = request.headers) !== null && _a !== void 0 ? _a : {};\n            setHeader(headers, 'user-agent', userAgent);\n            return Object.assign(Object.assign({}, request), { headers });\n        });\n    };\n}\nfunction withSquareVersion({ squareVersion }) {\n    return (rb) => {\n        rb.interceptRequest(request => {\n            var _a;\n            const headers = (_a = request.headers) !== null && _a !== void 0 ? _a : {};\n            setHeader(headers, 'Square-Version', squareVersion);\n            return Object.assign(Object.assign({}, request), { headers });\n        });\n    };\n}\nfunction withAuthenticationByDefault(rb) {\n    rb.authenticate(true);\n}\n//# sourceMappingURL=client.js.map",
      "start": 1709272108393,
      "end": 1709272108438,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709272108438,
      "end": 1709272108438,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709272108438,
      "end": 1709272108439,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709272108439,
      "end": 1709272108439,
      "order": "normal"
    }
  ]
}
