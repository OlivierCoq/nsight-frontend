{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/square/dist/esm/api/snippetsApi.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { deleteSnippetResponseSchema, } from '../models/deleteSnippetResponse';\nimport { retrieveSnippetResponseSchema, } from '../models/retrieveSnippetResponse';\nimport { upsertSnippetRequestSchema, } from '../models/upsertSnippetRequest';\nimport { upsertSnippetResponseSchema, } from '../models/upsertSnippetResponse';\nimport { string } from '../schema';\nimport { BaseApi } from './baseApi';\nexport class SnippetsApi extends BaseApi {\n    /**\n     * Removes your snippet from a Square Online site.\n     *\n     * You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller.\n     *\n     *\n     * __Note:__ Square Online APIs are publicly available as part of an early access program. For more\n     * information, see [Early access program for Square Online APIs](https://developer.squareup.\n     * com/docs/online-api#early-access-program-for-square-online-apis).\n     *\n     * @param siteId  The ID of the site that contains the snippet.\n     * @return Response from the API call\n     */\n    async deleteSnippet(siteId, requestOptions) {\n        const req = this.createRequest('DELETE');\n        const mapped = req.prepareArgs({ siteId: [siteId, string()] });\n        req.appendTemplatePath `/v2/sites/${mapped.siteId}/snippet`;\n        return req.callAsJson(deleteSnippetResponseSchema, requestOptions);\n    }\n    /**\n     * Retrieves your snippet from a Square Online site. A site can contain snippets from multiple snippet\n     * applications, but you can retrieve only the snippet that was added by your application.\n     *\n     * You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller.\n     *\n     *\n     * __Note:__ Square Online APIs are publicly available as part of an early access program. For more\n     * information, see [Early access program for Square Online APIs](https://developer.squareup.\n     * com/docs/online-api#early-access-program-for-square-online-apis).\n     *\n     * @param siteId  The ID of the site that contains the snippet.\n     * @return Response from the API call\n     */\n    async retrieveSnippet(siteId, requestOptions) {\n        const req = this.createRequest('GET');\n        const mapped = req.prepareArgs({ siteId: [siteId, string()] });\n        req.appendTemplatePath `/v2/sites/${mapped.siteId}/snippet`;\n        return req.callAsJson(retrieveSnippetResponseSchema, requestOptions);\n    }\n    /**\n     * Adds a snippet to a Square Online site or updates the existing snippet on the site.\n     * The snippet code is appended to the end of the `head` element on every page of the site, except\n     * checkout pages. A snippet application can add one snippet to a given site.\n     *\n     * You can call [ListSites]($e/Sites/ListSites) to get the IDs of the sites that belong to a seller.\n     *\n     *\n     * __Note:__ Square Online APIs are publicly available as part of an early access program. For more\n     * information, see [Early access program for Square Online APIs](https://developer.squareup.\n     * com/docs/online-api#early-access-program-for-square-online-apis).\n     *\n     * @param siteId       The ID of the site where you want to add or update the snippet.\n     * @param body         An object containing the fields to POST for the request.  See\n     *                                                    the corresponding object definition for field details.\n     * @return Response from the API call\n     */\n    async upsertSnippet(siteId, body, requestOptions) {\n        const req = this.createRequest('POST');\n        const mapped = req.prepareArgs({\n            siteId: [siteId, string()],\n            body: [body, upsertSnippetRequestSchema],\n        });\n        req.header('Content-Type', 'application/json');\n        req.json(mapped.body);\n        req.appendTemplatePath `/v2/sites/${mapped.siteId}/snippet`;\n        return req.callAsJson(upsertSnippetResponseSchema, requestOptions);\n    }\n}\n//# sourceMappingURL=snippetsApi.js.map",
      "start": 1707437860377,
      "end": 1707437860511,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707437860511,
      "end": 1707437860511,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707437860511,
      "end": 1707437860512,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707437860512,
      "end": 1707437860512,
      "order": "normal"
    }
  ]
}
