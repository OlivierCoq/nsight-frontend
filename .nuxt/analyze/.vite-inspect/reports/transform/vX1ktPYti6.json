{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/plugins/global_fetch.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ofetch } from 'ofetch'\n\nexport default defineNuxtPlugin((nuxtApp) => {\n  const instance = ofetch.create({\n    baseURL: '/api',\n    headers: {\n      Accept: 'application/json'\n    }\n  })\n\n  // You can also just do this instead of returning\n  // nuxtApp.provide('ofetch', instance)\n\n  // return {\n  //   provide: {\n  //     ofetch: instance\n  //   }\n  // }\n\n  nuxtApp.vueApp.use(instance)\n})",
      "start": 1705807625354,
      "end": 1705807628601,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1705807628601,
      "end": 1705807628601,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1705807628601,
      "end": 1705807628601,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1705807628601,
      "end": 1705807628601,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1705807628601,
      "end": 1705807628601,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { ofetch } from \"ofetch\";\nexport default defineNuxtPlugin((nuxtApp) => {\n  const instance = ofetch.create({\n    baseURL: \"/api\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  });\n  nuxtApp.vueApp.use(instance);\n});\n",
      "start": 1705807628601,
      "end": 1705807628603,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/plugins/global_fetch.ts"
        ],
        "sourcesContent": [
          "import { ofetch } from 'ofetch'\n\nexport default defineNuxtPlugin((nuxtApp) => {\n  const instance = ofetch.create({\n    baseURL: '/api',\n    headers: {\n      Accept: 'application/json'\n    }\n  })\n\n  // You can also just do this instead of returning\n  // nuxtApp.provide('ofetch', instance)\n\n  // return {\n  //   provide: {\n  //     ofetch: instance\n  //   }\n  // }\n\n  nuxtApp.vueApp.use(instance)\n})"
        ],
        "mappings": "AAAA,SAAS,cAAc;AAEvB,eAAe,iBAAiB,CAAC,YAAY;AAC3C,QAAM,WAAW,OAAO,OAAO;AAAA,IAC7B,SAAS;AAAA,IACT,SAAS;AAAA,MACP,QAAQ;AAAA,IACV;AAAA,EACF,CAAC;AAWD,UAAQ,OAAO,IAAI,QAAQ;AAC7B,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1705807628603,
      "end": 1705807628603,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1705807628603,
      "end": 1705807628603,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1705807628603,
      "end": 1705807628603,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1705807628603,
      "end": 1705807628603,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1705807628604,
      "end": 1705807628604,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1705807628604,
      "end": 1705807628605,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1705807628605,
      "end": 1705807628605,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1705807628605,
      "end": 1705807628605,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1705807628605,
      "end": 1705807628605,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1705807628609,
      "end": 1705807628609,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1705807628609,
      "end": 1705807628609,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1705807628609,
      "end": 1705807628609,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1705807628609,
      "end": 1705807628609,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1705807628609,
      "end": 1705807628609,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1705807628609,
      "end": 1705807628609,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1705807628609,
      "end": 1705807628609,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1705807628609,
      "end": 1705807628609,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1705807628610,
      "end": 1705807628610,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1705807628610,
      "end": 1705807628610,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { defineNuxtPlugin } from '#app/nuxt';\nimport { ofetch } from \"ofetch\";\nexport default defineNuxtPlugin((nuxtApp) => {\n  const instance = ofetch.create({\n    baseURL: \"/api\",\n    headers: {\n      Accept: \"application/json\"\n    }\n  });\n  nuxtApp.vueApp.use(instance);\n});\n",
      "start": 1705807628610,
      "end": 1705807628611,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1705807628611,
      "end": 1705807628612,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1705807628612,
      "end": 1705807628612,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1705807628612,
      "end": 1705807628612,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1705807628612,
      "end": 1705807628612,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1705807628612,
      "end": 1705807628612,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1705807628612,
      "end": 1705807628613,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1705807628613,
      "end": 1705807628613,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1705807628613,
      "end": 1705807628613,
      "order": "normal"
    }
  ]
}
