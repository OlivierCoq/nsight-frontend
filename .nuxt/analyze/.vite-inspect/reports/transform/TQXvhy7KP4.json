{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/@apimatic/core/es/errors/apiError.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { __extends } from 'tslib';\nimport JSONBig from '@apimatic/json-bigint';\n\n/**\r\n * Thrown when the HTTP status code is not okay.\r\n *\r\n * The ApiError extends the ApiResponse interface, so all ApiResponse\r\n * properties are available.\r\n */\nvar ApiError =\n/*#__PURE__*/\n/** @class */\nfunction (_super) {\n  __extends(ApiError, _super);\n  function ApiError(context, message) {\n    var _newTarget = this.constructor;\n    var _this = _super.call(this, message) || this;\n    Object.setPrototypeOf(_this, _newTarget.prototype);\n    var request = context.request,\n      response = context.response;\n    _this.request = request;\n    _this.statusCode = response.statusCode;\n    _this.headers = response.headers;\n    _this.body = response.body;\n    if (typeof response.body === 'string' && response.body !== '') {\n      var JSON_1 = JSONBig();\n      try {\n        _this.result = JSON_1.parse(response.body);\n      } catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (console) {\n            // tslint:disable-next-line:no-console\n            console.warn(\"Unexpected error: Could not parse HTTP response body as JSON. \" + error.message);\n          }\n        }\n      }\n    }\n    return _this;\n  }\n  return ApiError;\n}(Error);\nexport { ApiError };",
      "start": 1709272109420,
      "end": 1709272109447,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709272109447,
      "end": 1709272109447,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { __extends } from \"tslib\";\nimport JSONBig from \"@apimatic/json-bigint\";\nvar ApiError = (\n  /** @class */\n  /* @__PURE__ */ function(_super) {\n    __extends(ApiError2, _super);\n    function ApiError2(context, message) {\n      var _newTarget = this.constructor;\n      var _this = _super.call(this, message) || this;\n      Object.setPrototypeOf(_this, _newTarget.prototype);\n      var request = context.request, response = context.response;\n      _this.request = request;\n      _this.statusCode = response.statusCode;\n      _this.headers = response.headers;\n      _this.body = response.body;\n      if (typeof response.body === \"string\" && response.body !== \"\") {\n        var JSON_1 = JSONBig();\n        try {\n          _this.result = JSON_1.parse(response.body);\n        } catch (error) {\n          if (false) {\n            if (console) {\n              console.warn(\"Unexpected error: Could not parse HTTP response body as JSON. \" + error.message);\n            }\n          }\n        }\n      }\n      return _this;\n    }\n    return ApiError2;\n  }(Error)\n);\nexport { ApiError };\n",
      "start": 1709272109447,
      "end": 1709272109461,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:css-post",
      "start": 1709272109461,
      "end": 1709272109461,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709272109461,
      "end": 1709272109461,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709272109461,
      "end": 1709272109461,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709272109461,
      "end": 1709272109461,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709272109462,
      "end": 1709272109462,
      "order": "normal"
    }
  ]
}
