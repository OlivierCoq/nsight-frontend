{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/vuetify/lib/components/VLazy/VLazy.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\"; // Directives\nimport intersect from \"../../directives/intersect/index.mjs\"; // Utilities\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVLazyProps = propsFactory({\n  modelValue: Boolean,\n  options: {\n    type: Object,\n    // For more information on types, navigate to:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n    default: () => ({\n      root: undefined,\n      rootMargin: undefined,\n      threshold: undefined\n    })\n  },\n  ...makeComponentProps(),\n  ...makeDimensionProps(),\n  ...makeTagProps(),\n  ...makeTransitionProps({\n    transition: 'fade-transition'\n  })\n}, 'VLazy');\nexport const VLazy = genericComponent()({\n  name: 'VLazy',\n  directives: {\n    intersect\n  },\n  props: makeVLazyProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const isActive = useProxiedModel(props, 'modelValue');\n    function onIntersect(isIntersecting) {\n      if (isActive.value) return;\n      isActive.value = isIntersecting;\n    }\n    useRender(() => _withDirectives(_createVNode(props.tag, {\n      \"class\": ['v-lazy', props.class],\n      \"style\": [dimensionStyles.value, props.style]\n    }, {\n      default: () => [isActive.value && _createVNode(MaybeTransition, {\n        \"transition\": props.transition,\n        \"appear\": true\n      }, {\n        default: () => [slots.default?.()]\n      })]\n    }), [[_resolveDirective(\"intersect\"), {\n      handler: onIntersect,\n      options: props.options\n    }, null]]));\n    return {};\n  }\n});\n//# sourceMappingURL=VLazy.mjs.map",
      "start": 1705807631479,
      "end": 1705807631536,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1705807631536,
      "end": 1705807631536,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1705807631536,
      "end": 1705807631537,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1705807631537,
      "end": 1705807631537,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1705807631537,
      "end": 1705807631537,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1705807631537,
      "end": 1705807631537,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1705807631537,
      "end": 1705807631537,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1705807631537,
      "end": 1705807631537,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1705807631537,
      "end": 1705807631537,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1705807631537,
      "end": 1705807631537,
      "order": "normal"
    }
  ]
}
