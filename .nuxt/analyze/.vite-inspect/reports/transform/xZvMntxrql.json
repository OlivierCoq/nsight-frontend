{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/@apimatic/schema/es/types/discriminatedObject.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { __read } from 'tslib';\nimport { objectEntries } from '../utils.js';\nfunction discriminatedObject(discriminatorMappedPropName, discriminatorPropName, discriminatorMap, defaultDiscriminator, xmlOptions) {\n  var schemaSelector = function (value, discriminatorProp, isAttr) {\n    if (isAttr === void 0) {\n      isAttr = false;\n    }\n    if (typeof value === 'object' && value !== null && (isAttr && xmlObjectHasAttribute(value, discriminatorProp) || !isAttr && discriminatorProp in value)) {\n      var discriminatorValue = isAttr ? value.$[discriminatorProp] : value[discriminatorProp];\n      if (typeof discriminatorValue === 'string' && discriminatorValue in discriminatorMap) {\n        return discriminatorMap[discriminatorValue];\n      }\n    }\n    return discriminatorMap[defaultDiscriminator];\n  };\n  return {\n    type: function () {\n      return \"DiscriminatedUnion<\" + discriminatorPropName + \",[\" + objectEntries(discriminatorMap).map(function (_a) {\n        var _b = __read(_a, 2);\n        _b[0];\n        var v = _b[1];\n        return v.type;\n      }).join(',') + \"]>\";\n    },\n    map: function (value, ctxt) {\n      return schemaSelector(value, discriminatorPropName).map(value, ctxt);\n    },\n    unmap: function (value, ctxt) {\n      return schemaSelector(value, discriminatorMappedPropName).unmap(value, ctxt);\n    },\n    validateBeforeMap: function (value, ctxt) {\n      return schemaSelector(value, discriminatorPropName).validateBeforeMap(value, ctxt);\n    },\n    validateBeforeUnmap: function (value, ctxt) {\n      return schemaSelector(value, discriminatorMappedPropName).validateBeforeUnmap(value, ctxt);\n    },\n    mapXml: function (value, ctxt) {\n      var _a;\n      return schemaSelector(value, (_a = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _a !== void 0 ? _a : discriminatorPropName, xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr).mapXml(value, ctxt);\n    },\n    unmapXml: function (value, ctxt) {\n      return schemaSelector(value, discriminatorMappedPropName).unmapXml(value, ctxt);\n    },\n    validateBeforeMapXml: function (value, ctxt) {\n      var _a;\n      return schemaSelector(value, (_a = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _a !== void 0 ? _a : discriminatorPropName, xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr).validateBeforeMapXml(value, ctxt);\n    }\n  };\n}\nfunction xmlObjectHasAttribute(value, prop) {\n  return '$' in value && typeof value.$ === 'object' && prop in value.$;\n}\nexport { discriminatedObject };",
      "start": 1707437862513,
      "end": 1707437862603,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707437862604,
      "end": 1707437862604,
      "order": "normal"
    }
  ]
}
