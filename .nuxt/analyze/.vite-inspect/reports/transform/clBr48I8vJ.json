{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/presets/nsight_style_presets/splitbutton/index.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "export default {\n    root: ({ props }) => ({\n        class: [\n            // Flexbox and Position\n            'inline-flex',\n            'relative',\n\n            // Shape\n            'rounded-md',\n            { 'shadow-lg': props.raised }\n        ]\n    }),\n    button: {\n        root: ({ parent }) => ({\n            class: [\n                'relative',\n\n                // Alignments\n                'items-center inline-flex text-center align-bottom justify-center',\n\n                // Sizes & Spacing\n                'leading-[normal]',\n                {\n                    'px-4 py-3': parent.props.size === null,\n                    'text-sm py-2 px-3': parent.props.size === 'small',\n                    'text-xl py-3 px-4': parent.props.size === 'large'\n                },\n                {\n                    'min-w-12 p-0 py-3': parent.props.label == null && parent.props.icon !== null\n                },\n\n                // Shape\n                'rounded-r-none',\n                'border-r-0',\n                { 'rounded-l-full': parent.props.rounded },\n                { 'rounded-md': !parent.props.rounded, 'rounded-full': parent.props.rounded },\n\n                // Link Button\n                { 'text-primary-600 bg-transparent border-transparent': parent.props.link },\n\n                // Plain Button\n                { 'text-white bg-gray-500 border border-gray-500': parent.props.plain && !parent.props.outlined && !parent.props.text },\n                // Plain Text Button\n                { 'text-surface-500': parent.props.plain && parent.props.text },\n                // Plain Outlined Button\n                { 'text-surface-500 border border-gray-500': parent.props.plain && parent.props.outlined },\n\n                // Text Button\n                { 'bg-transparent border-transparent': parent.props.text && !parent.props.plain },\n\n                // Outlined Button\n                { 'bg-transparent border': parent.props.outlined && !parent.props.plain },\n\n                // --- Severity Buttons ---\n\n                // Primary Button\n                {\n                    'text-white dark:text-surface-900': !parent.props.link && parent.props.severity === null && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-primary-500 dark:bg-primary-400': !parent.props.link && parent.props.severity === null && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-primary-500 dark:border-primary-400': !parent.props.link && parent.props.severity === null && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Primary Text Button\n                { 'text-primary-500 dark:text-primary-400': parent.props.text && parent.props.severity === null && !parent.props.plain },\n                // Primary Outlined Button\n                { 'text-primary-500 border border-primary-500 hover:bg-primary-300/20': parent.props.outlined && parent.props.severity === null && !parent.props.plain },\n\n                // Secondary Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'secondary' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-surface-500 dark:bg-surface-400': parent.props.severity === 'secondary' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-surface-500 dark:border-surface-400': parent.props.severity === 'secondary' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Secondary Text Button\n                { 'text-surface-500 dark:text-surface-400': parent.props.text && parent.props.severity === 'secondary' && !parent.props.plain },\n                // Secondary Outlined Button\n                { 'text-surface-500 border border-surface-500 hover:bg-surface-300/20': parent.props.outlined && parent.props.severity === 'secondary' && !parent.props.plain },\n\n                // Success Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'success' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-green-500 dark:bg-green-400': parent.props.severity === 'success' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-green-500 dark:border-green-400': parent.props.severity === 'success' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Success Text Button\n                { 'text-surface-500 dark:text-surface-400': parent.props.text && parent.props.severity === 'secondary' && !parent.props.plain },\n                // Success Outlined Button\n                { 'text-green-500 border border-green-500 hover:bg-green-300/20': parent.props.outlined && parent.props.severity === 'success' && !parent.props.plain },\n\n                // Info Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'info' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-blue-500 dark:bg-blue-400': parent.props.severity === 'info' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-blue-500 dark:border-blue-400': parent.props.severity === 'info' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Info Text Button\n                { 'text-blue-500 dark:text-blue-400': parent.props.text && parent.props.severity === 'info' && !parent.props.plain },\n                // Info Outlined Button\n                { 'text-blue-500 border border-blue-500 hover:bg-blue-300/20 ': parent.props.outlined && parent.props.severity === 'info' && !parent.props.plain },\n\n                // Warning Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'warning' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-orange-500 dark:bg-orange-400': parent.props.severity === 'warning' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-orange-500 dark:border-orange-400': parent.props.severity === 'warning' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Warning Text Button\n                { 'text-orange-500 dark:text-orange-400': parent.props.text && parent.props.severity === 'warning' && !parent.props.plain },\n                // Warning Outlined Button\n                { 'text-orange-500 border border-orange-500 hover:bg-orange-300/20': parent.props.outlined && parent.props.severity === 'warning' && !parent.props.plain },\n\n                // Help Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'help' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-purple-500 dark:bg-purple-400': parent.props.severity === 'help' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-purple-500 dark:border-purple-400': parent.props.severity === 'help' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Help Text Button\n                { 'text-purple-500 dark:text-purple-400': parent.props.text && parent.props.severity === 'help' && !parent.props.plain },\n                // Help Outlined Button\n                { 'text-purple-500 border border-purple-500 hover:bg-purple-300/20': parent.props.outlined && parent.props.severity === 'help' && !parent.props.plain },\n\n                // Danger Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'danger' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-red-500 dark:bg-red-400': parent.props.severity === 'danger' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-red-500 dark:border-red-400': parent.props.severity === 'danger' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Danger Text Button\n                { 'text-red-500 dark:text-red-400': parent.props.text && parent.props.severity === 'danger' && !parent.props.plain },\n                // Danger Outlined Button\n                { 'text-red-500 border border-red-500 hover:bg-red-300/20': parent.props.outlined && parent.props.severity === 'danger' && !parent.props.plain },\n\n                // --- Severity Button States ---\n                'focus:outline-none focus:outline-offset-0 focus:ring',\n\n                // Link\n                { 'focus:ring-primary-400/50 dark:focus:ring-primary-300/50': parent.props.link },\n\n                // Plain\n                { 'hover:bg-gray-600 hover:border-gray-600': parent.props.plain && !parent.props.outlined && !parent.props.text },\n                // Text & Outlined Button\n                { 'hover:bg-surface-300/20': parent.props.plain && (parent.props.text || parent.props.outlined) },\n\n                // Primary\n                { 'hover:bg-primary-600 dark:hover:bg-primary-300 hover:border-primary-600 dark:hover:border-primary-300': !parent.props.link && parent.props.severity === null && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-primary-400/50 dark:focus:ring-primary-300/50': !parent.props.link && parent.props.severity === null && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                // Text & Outlined Button\n                { 'hover:bg-primary-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === null && !parent.props.plain },\n\n                // Secondary\n                { 'hover:bg-surface-600 dark:hover:bg-surface-300 hover:border-surface-600 dark:hover:border-surface-300': parent.props.severity === 'secondary' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-surface-400/50 dark:focus:ring-surface-300/50': parent.props.severity === 'secondary' },\n                // Text & Outlined Button\n                { 'hover:bg-surface-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'secondary' && !parent.props.plain },\n\n                // Success\n                { 'hover:bg-green-600 dark:hover:bg-green-300 hover:border-green-600 dark:hover:border-green-300': parent.props.severity === 'success' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-green-400/50 dark:focus:ring-green-300/50': parent.props.severity === 'success' },\n                // Text & Outlined Button\n                { 'hover:bg-green-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'success' && !parent.props.plain },\n\n                // Info\n                { 'hover:bg-blue-600 dark:hover:bg-blue-300 hover:border-blue-600 dark:hover:border-blue-300': parent.props.severity === 'info' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-blue-400/50 dark:focus:ring-blue-300/50': parent.props.severity === 'info' },\n                // Text & Outlined Button\n                { 'hover:bg-blue-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'info' && !parent.props.plain },\n\n                // Warning\n                { 'hover:bg-orange-600 dark:hover:bg-orange-300 hover:border-orange-600 dark:hover:border-orange-300': parent.props.severity === 'warning' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-orange-400/50 dark:focus:ring-orange-300/50': parent.props.severity === 'warning' },\n                // Text & Outlined Button\n                { 'hover:bg-orange-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'warning' && !parent.props.plain },\n\n                // Help\n                { 'hover:bg-purple-600 dark:hover:bg-purple-300 hover:border-purple-600 dark:hover:border-purple-300': parent.props.severity === 'help' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-purple-400/50 dark:focus:ring-purple-300/50': parent.props.severity === 'help' },\n                // Text & Outlined Button\n                { 'hover:bg-purple-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'help' && !parent.props.plain },\n\n                // Warning\n                { 'hover:bg-red-600 dark:hover:bg-red-300 hover:border-red-600 dark:hover:border-red-300': parent.props.severity === 'danger' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-red-400/50 dark:focus:ring-red-300/50': parent.props.severity === 'danger' },\n                // Text & Outlined Button\n                { 'hover:bg-red-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'danger' && !parent.props.plain },\n\n                // Transitions\n                'transition duration-200 ease-in-out',\n\n                // Misc\n                'cursor-pointer overflow-hidden select-none'\n            ]\n        }),\n        icon: {\n            class: [\n                // Margins\n                'mr-2'\n            ]\n        }\n    },\n    menubutton: {\n        root: ({ parent }) => ({\n            class: [\n                'relative',\n                // Alignments\n                'items-center inline-flex text-center align-bottom justify-center',\n\n                // Sizes & Spacing\n                'leading-[normal]',\n                {\n                    'px-4 py-3': parent.props.size === null,\n                    'text-sm py-2 px-3': parent.props.size === 'small',\n                    'text-xl py-3 px-4': parent.props.size === 'large'\n                },\n                {\n                    'min-w-12 p-0 py-3': parent.props.label == null && parent.props.icon !== null\n                },\n\n                // Shape\n                'rounded-l-none',\n                { 'rounded-l-full': parent.props.rounded },\n                { 'rounded-md': !parent.props.rounded, 'rounded-full': parent.props.rounded },\n\n                // Link Button\n                { 'text-primary-600 bg-transparent border-transparent': parent.props.link },\n\n                // Plain Button\n                { 'text-white bg-gray-500 border border-gray-500': parent.props.plain && !parent.props.outlined && !parent.props.text },\n                // Plain Text Button\n                { 'text-surface-500': parent.props.plain && parent.props.text },\n                // Plain Outlined Button\n                { 'text-surface-500 border border-gray-500': parent.props.plain && parent.props.outlined },\n\n                // Text Button\n                { 'bg-transparent border-transparent': parent.props.text && !parent.props.plain },\n\n                // Outlined Button\n                { 'bg-transparent border': parent.props.outlined && !parent.props.plain },\n\n                // --- Severity Buttons ---\n\n                // Primary Button\n                {\n                    'text-white dark:text-surface-900': !parent.props.link && parent.props.severity === null && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-primary-500 dark:bg-primary-400': !parent.props.link && parent.props.severity === null && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-primary-500 dark:border-primary-400': !parent.props.link && parent.props.severity === null && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Primary Text Button\n                { 'text-primary-500 dark:text-primary-400': parent.props.text && parent.props.severity === null && !parent.props.plain },\n                // Primary Outlined Button\n                { 'text-primary-500 border border-primary-500 hover:bg-primary-300/20': parent.props.outlined && parent.props.severity === null && !parent.props.plain },\n\n                // Secondary Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'secondary' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-surface-500 dark:bg-surface-400': parent.props.severity === 'secondary' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-surface-500 dark:border-surface-400': parent.props.severity === 'secondary' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Secondary Text Button\n                { 'text-surface-500 dark:text-surface-400': parent.props.text && parent.props.severity === 'secondary' && !parent.props.plain },\n                // Secondary Outlined Button\n                { 'text-surface-500 border border-surface-500 hover:bg-surface-300/20': parent.props.outlined && parent.props.severity === 'secondary' && !parent.props.plain },\n\n                // Success Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'success' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-green-500 dark:bg-green-400': parent.props.severity === 'success' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-green-500 dark:border-green-400': parent.props.severity === 'success' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Success Text Button\n                { 'text-surface-500 dark:text-surface-400': parent.props.text && parent.props.severity === 'secondary' && !parent.props.plain },\n                // Success Outlined Button\n                { 'text-green-500 border border-green-500 hover:bg-green-300/20': parent.props.outlined && parent.props.severity === 'success' && !parent.props.plain },\n\n                // Info Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'info' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-blue-500 dark:bg-blue-400': parent.props.severity === 'info' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-blue-500 dark:border-blue-400': parent.props.severity === 'info' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Info Text Button\n                { 'text-blue-500 dark:text-blue-400': parent.props.text && parent.props.severity === 'info' && !parent.props.plain },\n                // Info Outlined Button\n                { 'text-blue-500 border border-blue-500 hover:bg-blue-300/20 ': parent.props.outlined && parent.props.severity === 'info' && !parent.props.plain },\n\n                // Warning Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'warning' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-orange-500 dark:bg-orange-400': parent.props.severity === 'warning' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-orange-500 dark:border-orange-400': parent.props.severity === 'warning' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Warning Text Button\n                { 'text-orange-500 dark:text-orange-400': parent.props.text && parent.props.severity === 'warning' && !parent.props.plain },\n                // Warning Outlined Button\n                { 'text-orange-500 border border-orange-500 hover:bg-orange-300/20': parent.props.outlined && parent.props.severity === 'warning' && !parent.props.plain },\n\n                // Help Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'help' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-purple-500 dark:bg-purple-400': parent.props.severity === 'help' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-purple-500 dark:border-purple-400': parent.props.severity === 'help' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Help Text Button\n                { 'text-purple-500 dark:text-purple-400': parent.props.text && parent.props.severity === 'help' && !parent.props.plain },\n                // Help Outlined Button\n                { 'text-purple-500 border border-purple-500 hover:bg-purple-300/20': parent.props.outlined && parent.props.severity === 'help' && !parent.props.plain },\n\n                // Danger Button\n                {\n                    'text-white dark:text-surface-900': parent.props.severity === 'danger' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'bg-red-500 dark:bg-red-400': parent.props.severity === 'danger' && !parent.props.text && !parent.props.outlined && !parent.props.plain,\n                    'border border-red-500 dark:border-red-400': parent.props.severity === 'danger' && !parent.props.text && !parent.props.outlined && !parent.props.plain\n                },\n                // Danger Text Button\n                { 'text-red-500 dark:text-red-400': parent.props.text && parent.props.severity === 'danger' && !parent.props.plain },\n                // Danger Outlined Button\n                { 'text-red-500 border border-red-500 hover:bg-red-300/20': parent.props.outlined && parent.props.severity === 'danger' && !parent.props.plain },\n\n                // --- Severity Button States ---\n                'focus:outline-none focus:outline-offset-0 focus:ring',\n\n                // Link\n                { 'focus:ring-primary-400/50 dark:focus:ring-primary-300/50': parent.props.link },\n\n                // Plain\n                { 'hover:bg-gray-600 hover:border-gray-600': parent.props.plain && !parent.props.outlined && !parent.props.text },\n                // Text & Outlined Button\n                { 'hover:bg-surface-300/20': parent.props.plain && (parent.props.text || parent.props.outlined) },\n\n                // Primary\n                { 'hover:bg-primary-600 dark:hover:bg-primary-300 hover:border-primary-600 dark:hover:border-primary-300': !parent.props.link && parent.props.severity === null && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-primary-400/50 dark:focus:ring-primary-300/50': !parent.props.link && parent.props.severity === null && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                // Text & Outlined Button\n                { 'hover:bg-primary-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === null && !parent.props.plain },\n\n                // Secondary\n                { 'hover:bg-surface-600 dark:hover:bg-surface-300 hover:border-surface-600 dark:hover:border-surface-300': parent.props.severity === 'secondary' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-surface-400/50 dark:focus:ring-surface-300/50': parent.props.severity === 'secondary' },\n                // Text & Outlined Button\n                { 'hover:bg-surface-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'secondary' && !parent.props.plain },\n\n                // Success\n                { 'hover:bg-green-600 dark:hover:bg-green-300 hover:border-green-600 dark:hover:border-green-300': parent.props.severity === 'success' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-green-400/50 dark:focus:ring-green-300/50': parent.props.severity === 'success' },\n                // Text & Outlined Button\n                { 'hover:bg-green-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'success' && !parent.props.plain },\n\n                // Info\n                { 'hover:bg-blue-600 dark:hover:bg-blue-300 hover:border-blue-600 dark:hover:border-blue-300': parent.props.severity === 'info' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-blue-400/50 dark:focus:ring-blue-300/50': parent.props.severity === 'info' },\n                // Text & Outlined Button\n                { 'hover:bg-blue-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'info' && !parent.props.plain },\n\n                // Warning\n                { 'hover:bg-orange-600 dark:hover:bg-orange-300 hover:border-orange-600 dark:hover:border-orange-300': parent.props.severity === 'warning' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-orange-400/50 dark:focus:ring-orange-300/50': parent.props.severity === 'warning' },\n                // Text & Outlined Button\n                { 'hover:bg-orange-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'warning' && !parent.props.plain },\n\n                // Help\n                { 'hover:bg-purple-600 dark:hover:bg-purple-300 hover:border-purple-600 dark:hover:border-purple-300': parent.props.severity === 'help' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-purple-400/50 dark:focus:ring-purple-300/50': parent.props.severity === 'help' },\n                // Text & Outlined Button\n                { 'hover:bg-purple-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'help' && !parent.props.plain },\n\n                // Warning\n                { 'hover:bg-red-600 dark:hover:bg-red-300 hover:border-red-600 dark:hover:border-red-300': parent.props.severity === 'danger' && !parent.props.text && !parent.props.outlined && !parent.props.plain },\n                { 'focus:ring-red-400/50 dark:focus:ring-red-300/50': parent.props.severity === 'danger' },\n                // Text & Outlined Button\n                { 'hover:bg-red-300/20': (parent.props.text || parent.props.outlined) && parent.props.severity === 'danger' && !parent.props.plain },\n\n                // Transitions\n                'transition duration-200 ease-in-out',\n\n                // Misc\n                'cursor-pointer overflow-hidden select-none'\n            ]\n        }),\n        label: {\n            class: ['hidden']\n        }\n    },\n    menu: {\n        root: {\n            class: [\n                // Shape\n                'rounded-md',\n\n                // Size\n                'min-w-[12rem]',\n                'py-1',\n\n                // Colors\n                'bg-surface-0 dark:bg-surface-700',\n                'border border-surface-200 dark:border-surface-700'\n            ]\n        },\n        menu: {\n            class: [\n                // Spacings and Shape\n                'list-none',\n                'm-0',\n                'p-0',\n                'outline-none'\n            ]\n        },\n        menuitem: {\n            class: [\n                // Position\n                'relative'\n            ]\n        },\n        content: ({ context }) => ({\n            class: [\n                //Shape\n                'rounded-none',\n\n                //  Colors\n                {\n                    'text-surface-500 dark:text-white/70': !context.focused && !context.active,\n                    'text-surface-500 dark:text-white/70 bg-surface-200 dark:bg-surface-600/90': context.focused && !context.active,\n                    'text-primary-700 dark:text-surface-0/80 bg-primary-50 dark:bg-primary-400/30': context.focused && context.active,\n                    'text-primary-700 dark:text-surface-0/80 bg-primary-50 dark:bg-primary-400/30': !context.focused && context.active\n                },\n\n                // Hover States\n                {\n                    'hover:bg-surface-100 dark:hover:bg-surface-600/80': !context.active,\n                    'hover:bg-primary-500/50 dark:hover:bg-primary-300/30 text-primary-700 dark:text-surface-0/80': context.active\n                },\n\n                // Transitions\n                'transition-shadow',\n                'duration-200'\n            ]\n        }),\n        action: {\n            class: [\n                'relative',\n                // Flexbox\n\n                'flex',\n                'items-center',\n\n                // Spacing\n                'py-3',\n                'px-5',\n\n                // Color\n                'text-surface-700 dark:text-white/80',\n\n                // Misc\n                'no-underline',\n                'overflow-hidden',\n                'cursor-pointer',\n                'select-none'\n            ]\n        },\n        icon: {\n            class: [\n                // Spacing\n                'mr-2',\n\n                // Color\n                'text-surface-600 dark:text-white/70'\n            ]\n        },\n        label: {\n            class: ['leading-none']\n        },\n        submenuicon: {\n            class: [\n                // Position\n                'ml-auto'\n            ]\n        },\n        submenu: {\n            class: [\n                // Size\n                'w-full sm:w-48',\n\n                // Spacing\n                'py-1',\n                'm-0',\n                'list-none',\n\n                // Shape\n                'shadow-none sm:shadow-md',\n                'border-0',\n\n                // Position\n                'static sm:absolute',\n                'z-10',\n\n                // Color\n                'bg-surface-0 dark:bg-surface-700'\n            ]\n        },\n        separator: {\n            class: 'border-t border-surface-200 dark:border-surface-600 my-1'\n        }\n    }\n};\n",
      "start": 1709003846039,
      "end": 1709003846088,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709003846088,
      "end": 1709003846088,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709003846088,
      "end": 1709003846093,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709003846093,
      "end": 1709003846093,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709003846093,
      "end": 1709003846093,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709003846093,
      "end": 1709003846094,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709003846094,
      "end": 1709003846094,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709003846094,
      "end": 1709003846094,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709003846094,
      "end": 1709003846094,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709003846094,
      "end": 1709003846094,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709003846094,
      "end": 1709003846094,
      "order": "normal"
    }
  ]
}
