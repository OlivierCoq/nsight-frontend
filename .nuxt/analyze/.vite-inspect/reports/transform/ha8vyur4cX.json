{
  "resolvedId": "/Applications/MAMP/htdocs/www/NSIGHT_PROJECT/nsight-frontend/node_modules/@apimatic/schema/es/types/lazy.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { __spreadArray, __read } from 'tslib';\nimport { once } from '../utils.js';\n\n/**\r\n * Create a schema that lazily delegates to the given schema.\r\n */\nfunction lazy(schemaFn) {\n  var getSchema = once(schemaFn); // Memoize schema\n  return {\n    type: function () {\n      return \"Lazy<\" + getSchema().type() + \">\";\n    },\n    map: function () {\n      var _a;\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return (_a = getSchema()).map.apply(_a, __spreadArray([], __read(args)));\n    },\n    unmap: function () {\n      var _a;\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return (_a = getSchema()).unmap.apply(_a, __spreadArray([], __read(args)));\n    },\n    validateBeforeMap: function () {\n      var _a;\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return (_a = getSchema()).validateBeforeMap.apply(_a, __spreadArray([], __read(args)));\n    },\n    validateBeforeUnmap: function () {\n      var _a;\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return (_a = getSchema()).validateBeforeUnmap.apply(_a, __spreadArray([], __read(args)));\n    },\n    mapXml: function () {\n      var _a;\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return (_a = getSchema()).mapXml.apply(_a, __spreadArray([], __read(args)));\n    },\n    unmapXml: function () {\n      var _a;\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return (_a = getSchema()).unmapXml.apply(_a, __spreadArray([], __read(args)));\n    },\n    validateBeforeMapXml: function () {\n      var _a;\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return (_a = getSchema()).validateBeforeMapXml.apply(_a, __spreadArray([], __read(args)));\n    }\n  };\n}\nexport { lazy };",
      "start": 1707437862514,
      "end": 1707437862602,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1707437862602,
      "end": 1707437862602,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1707437862602,
      "end": 1707437862603,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1707437862603,
      "end": 1707437862603,
      "order": "normal"
    }
  ]
}
